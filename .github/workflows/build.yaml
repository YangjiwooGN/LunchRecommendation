name: Build & Push (Docker Hub) & Update GitOps

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  IMAGE_BACKEND: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/lunch-backend
  IMAGE_FRONTEND: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/lunch-frontend
  GITOPS_REPO: ${{ secrets.GITOPS_REPO }}
  KUSTOMIZE_PATH: base

jobs:
  # ‚úÖ 1) Î∞±ÏóîÎìú Ïù¥ÎØ∏ÏßÄ ÎπåÎìú & Ìë∏Ïãú
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Backend Image
        run: |
          docker build -f Dockerfile.backend -t $IMAGE_BACKEND:${{ github.sha }} .
          docker tag  $IMAGE_BACKEND:${{ github.sha }} $IMAGE_BACKEND:latest
          docker push $IMAGE_BACKEND:${{ github.sha }}
          docker push $IMAGE_BACKEND:latest

  # ‚úÖ 2) ÌîÑÎ°†Ìä∏ÏóîÎìú Ïù¥ÎØ∏ÏßÄ ÎπåÎìú & Ìë∏Ïãú
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Frontend Image
        run: |
          docker build -f Dockerfile.frontend \
            --build-arg REACT_APP_API_BASE="${{ secrets.REACT_APP_API_BASE || '/api' }}" \
            -t $IMAGE_FRONTEND:${{ github.sha }} .
          docker tag  $IMAGE_FRONTEND:${{ github.sha }} $IMAGE_FRONTEND:latest
          docker push $IMAGE_FRONTEND:${{ github.sha }}
          docker push $IMAGE_FRONTEND:latest

  # ‚úÖ 3) GitOps Î†àÌè¨ ÏóÖÎç∞Ïù¥Ìä∏ (ArgoCDÍ∞Ä ÏûêÎèô Î∞∞Ìè¨)
  update-gitops:
    needs: [ build-backend, build-frontend ]
    runs-on: ubuntu-latest
    steps:
      - name: Clone GitOps repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITOPS_REPO }}
          token: ${{ secrets.GITOPS_TOKEN }}
          path: gitops

      - name: Install yq (v4)
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.44.2/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          yq --version

      - name: Update image tags in kustomization.yaml
        env:
          IMAGE_BACKEND: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/lunch-backend
          IMAGE_FRONTEND: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/lunch-frontend
          GITHUB_SHA: ${{ github.sha }}
        run: |
          cd gitops/${{ env.KUSTOMIZE_PATH }}

          echo "üîÑ Updating backend image to $IMAGE_BACKEND:$GITHUB_SHA"
          yq -i '
            .images[] |= (if .name == env(IMAGE_BACKEND) then .newTag = env(GITHUB_SHA) else . end)
          ' kustomization.yaml

          echo "üîÑ Updating frontend image to $IMAGE_FRONTEND:$GITHUB_SHA"
          yq -i '
            .images[] |= (if .name == env(IMAGE_FRONTEND) then .newTag = env(GITHUB_SHA) else . end)
          ' kustomization.yaml

      - name: Commit & Push changes
        run: |
          cd gitops
          git config user.name "YangjiwooGN"
          git config user.email "jwoo3460@gmail.com"
          git add -A
          git commit -m "Update images to $GITHUB_SHA" || echo "No changes to commit"
          git push
